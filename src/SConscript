#    Copyright (c) Open Connectivity Foundation (OCF), AllJoyn Open Source
#    Project (AJOSP) Contributors and others.
#    
#    SPDX-License-Identifier: Apache-2.0
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0
#    
#    Copyright (c) Open Connectivity Foundation and Contributors to AllSeen
#    Alliance. All rights reserved.
#    
#    Permission to use, copy, modify, and/or distribute this software for
#    any purpose with or without fee is hereby granted, provided that the
#    above copyright notice and this permission notice appear in all
#    copies.
#    
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
#    WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
#    WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
#    AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
#    DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
#    PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
#    TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#    PERFORMANCE OF THIS SOFTWARE.
Import('xmppconn_env')
import os

if not xmppconn_env.has_key('_ALLJOYNCORE_'):
    xmppconn_env.Append(LIBS = ['alljoyn'])
    if xmppconn_env['OS'] == 'openwrt':
        xmppconn_env.AppendUnique(LIBS = [ 'stdc++', 'pthread', 'gcc_s' ])
    if xmppconn_env['OS'] == 'linux':
        xmppconn_env.AppendUnique(LIBS = [ 'pthread' ])

xmppconn_env.Append(CPPPATH = ['$LIBXML2_INCDIR', '$RAPIDJSON_INCDIR', '$LIBSTROPHE_INCDIR', '.'])
xmppconn_env.Append(LIBPATH = ['$LIBXML2_LIBDIR', '$LIBSTROPHE_LIBDIR', '.'])
xmppconn_env.Append(LIBS = ['libxml2', 'strophe', 'ssl', 'crypto', 'resolv', 'rt', 'z', 'c', 'uuid'])
xmppconn_env.Prepend(LIBS = ['alljoyn_about', 'alljoyn_config'])

if xmppconn_env['USE_GATEWAY_AGENT'] == 'off':
    xmppconn_env.Append(CCFLAGS = ['-DNO_AJ_GATEWAY'])

srcs = xmppconn_env.Glob('app/*.cpp')
srcs.extend(xmppconn_env.Glob('common/*.cpp'))
srcs.extend(xmppconn_env.Glob('transport/*.cpp'))
objs = xmppconn_env.Object(srcs)

# TEMPORARY: ignore deprecated warnings until we can rework the code
xmppconn_env.Append(CCFLAGS = ['-Wno-deprecated-declarations'])
#xmppconn_env.Append(CCFLAGS = ['-Wno-error'])

prog = xmppconn_env.Program('xmppconn', objs)

Return('prog')